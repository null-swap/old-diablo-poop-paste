package cc.diablo.module.impl.exploit;

import cc.diablo.event.impl.LightningEvent;
import cc.diablo.event.impl.Render3DEvent;
import cc.diablo.event.impl.WorldLoadEvent;
import cc.diablo.helpers.render.ChatHelper;
import cc.diablo.helpers.render.ColorHelper;
import cc.diablo.helpers.render.RenderUtils;
import cc.diablo.manager.module.ModuleManager;
import cc.diablo.module.Category;
import cc.diablo.module.Module;
import cc.diablo.render.notification.NotificationManager;
import com.google.common.eventbus.Subscribe;
import javafx.scene.effect.Light;
import net.minecraft.block.Block;
import net.minecraft.util.BlockPos;
import org.lwjgl.input.Keyboard;

import java.awt.*;
import java.util.ArrayList;

public class LightningDetector extends Module {
    public ArrayList<BlockPos> lightningBlocks = new ArrayList<BlockPos>();

    public LightningDetector(){
        super("LightningDetector","Detects the position of a lightning strike", Keyboard.KEY_NONE, Category.Exploit);
    }

    @Override
    public void onEnable() {
        lightningBlocks.clear();
        super.onEnable();
    }

    @Override
    public void onDisable(){
        super.onDisable();
    }

    @Subscribe
    public void onLightning(LightningEvent e){
        lightningBlocks.add(new BlockPos(e.getX(),e.getY(),e.getZ()));
        //NotificationManager.SendNotification("Lightning detected at " + (int) e.getX() + "," + (int) e.getY() + "," + (int) e.getZ(),10000);
        ChatHelper.addChat("Lightning detected at " + (int) e.getX() + "," + (int) e.getY() + "," + (int) e.getZ());
    }

    @Subscribe
    public void onWorldChange(WorldLoadEvent e){
        if(lightningBlocks.size() != 0) {
            lightningBlocks.clear();
        }
    }
    @Subscribe
    public void onRender3D(Render3DEvent e){
        for (BlockPos object : lightningBlocks) {
            //RenderUtils.drawLineToPosition(object, new Color(0, 187, 255).getRGB());
        }
    }
}
